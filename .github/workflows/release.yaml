name: Build and Release

on:
  repository_dispatch:
    types: [new-tag-created]

env:
  PROJECT_NAME: lol-convert
  DOTNET_VERSION: "8.0.x"

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: |
          cd src
          dotnet restore

      - name: Build
        run: |
          cd src
          dotnet build ${{ env.PROJECT_NAME }} -c Release -f net8.0 --no-restore

      - name: Publish
        run: |
          cd src
          dotnet publish ${{ env.PROJECT_NAME }} -c Release -f net8.0 -r win-x64 --self-contained true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-${{ github.event.client_payload.tag }}.exe
          path: ${{ env.PROJECT_NAME }}/bin/x64/Release/net8.0/publish/win-x64/${{ env.PROJECT_NAME }}.exe

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.client_payload.tag }}
          release_name: Release ${{ github.event.client_payload.tag }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PROJECT_NAME }}/bin/x64/Release/net8.0/publish/win-x64/${{ env.PROJECT_NAME }}.exe
          asset_name: ${{ env.PROJECT_NAME }}-${{ github.event.client_payload.tag }}.exe
          asset_content_type: application/octet-stream
